experiment:
  experiment_series: "delatorre"
  output_dir: "./outputs/delatorre_experiment/standard/creative/"
model:
  api_type: "together"
  name: [
    "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "meta-llama/Meta-Llama-3.1-70B-Instruct-Turbo",
    "meta-llama/Meta-Llama-3-8B-Instruct-Turbo",
    "meta-llama/Meta-Llama-3-70B-Instruct-Turbo",
    "meta-llama/Meta-Llama-3-8B-Instruct-Lite",
    "meta-llama/Meta-Llama-3-70B-Instruct-Lite",
    # "google/gemma-2-27b-it",
    # "google/gemma-2-9b-it",
    # "google/gemma-2b-it",
    # "mistralai/Mistral-7B-Instruct-v0.3",
    # "mistralai/Mistral-7B-Instruct-v0.2",
    # "mistralai/Mistral-7B-Instruct-v0.1",
    # "mistralai/Mixtral-8x7B-Instruct-v0.1",
    # "mistralai/Mixtral-8x22B-Instruct-v0.1",
    # "Qwen/Qwen1.5-72B-Chat",
    # "Qwen/Qwen1.5-110B-Chat",
    # "Qwen/Qwen2-72B-Instruct",
  ]
  max_tokens: 500
  temperature: 1.0
  top_p: 0.9
  repetition_penalty: 1.0
  stop: ["<|eot_id|>"]
  stream: true
parse_model:
  api_type: "together"
  name: "meta-llama/Meta-Llama-3-8B-Instruct-Lite"
  prompt: >
    The following text provides a numerical rating of a passage. Extract numerical value in the text and nothing else. Structure your output as a single word in the format: ```value```
  max_tokens: 100
  temperature: 0.0 # Parser should always be deterministic
  top_p: 0.9
  repetition_penalty: 1.0
  stop: ["<|eot_id|>"]
  stream: true
